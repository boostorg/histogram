// Copyright (c) 2019 Przemyslaw Bartosik
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt
// or copy at http://www.boost.org/LICENSE_1_0.txt)

#include <boost/assert.hpp>
#include <boost/core/lightweight_test.hpp>
#include <boost/histogram/display.hpp>
#include <sstream>
#include "throw_exception.hpp"
#include "utility_allocator.hpp"

using namespace boost::histogram;

namespace {
const std::string h1_expected_r = //regular
    "\n"
    "                  +------------------------------------------------------------+\n"
    "  [-inf, -0.5)  0 |                                                            |\n"
    "  [-0.5,  0.0)  1 |***********                                                 |\n"
    "  [ 0.0,  0.5)  5 |*********************************************************   |\n"
    "  [ 0.5,  1.0)  3 |**********************************                          |\n"
    "  [ 1.0,  1.5)  0 |                                                            |\n"
    "  [ 1.5,  2.0)  1 |***********                                                 |\n"
    "  [ 2.0,  inf]  0 |                                                            |\n"
    "                  +------------------------------------------------------------+\n"
    "\n";
    
const std::string h2_expected_r =
    "\n"
    "                   +-----------------------------------------------------------+\n"
    "  [-inf, -5.0)  0  |                                                           |\n"
    "  [-5.0, -4.1)  19 |********************************************************   |\n"
    "  [-4.1, -3.3)  16 |***********************************************            |\n"
    "  [-3.3, -2.4)  12 |***********************************                        |\n"
    "  [-2.4, -1.6)  14 |*****************************************                  |\n"
    "  [-1.6, -0.7)  14 |*****************************************                  |\n"
    "  [-0.7,  0.1)  10 |******************************                             |\n"
    "  [ 0.1,  1.0)  15 |********************************************               |\n"
    "  [ 1.0,  inf]  0  |                                                           |\n"
    "                   +-----------------------------------------------------------+\n"
    "\n";

const std::string h3_expected_r =
    "\n"
    "                     +---------------------------------------------------------+\n"
    "  [-inf, -3.0)  0    |                                                         |\n"
    "  [-3.0, -2.4)  819  |*************************************                    |\n"
    "  [-2.4, -1.8)  1181 |*****************************************************    |\n"
    "  [-1.8, -1.2)  854  |**************************************                   |\n"
    "  [-1.2, -0.6)  1162 |****************************************************     |\n"
    "  [-0.6,  0.0)  884  |****************************************                 |\n"
    "  [ 0.0,  0.6)  1037 |***********************************************          |\n"
    "  [ 0.6,  1.2)  1020 |**********************************************           |\n"
    "  [ 1.2,  1.8)  1203 |******************************************************   |\n"
    "  [ 1.8,  2.4)  844  |**************************************                   |\n"
    "  [ 2.4,  3.0)  996  |*********************************************            |\n"
    "  [ 3.0,  inf]  0    |                                                         |\n"
    "                     +---------------------------------------------------------+\n"
    "\n";

const std::string h3_expected_n = //narrow
    "\n"
    "                     +-----------------+\n"
    "  [-inf, -3.0)  0    |                 |\n"
    "  [-3.0, -2.4)  819  |***********      |\n"
    "  [-2.4, -1.8)  1181 |**************** |\n"
    "  [-1.8, -1.2)  854  |***********      |\n"
    "  [-1.2, -0.6)  1162 |**************** |\n"
    "  [-0.6,  0.0)  884  |************     |\n"
    "  [ 0.0,  0.6)  1037 |**************   |\n"
    "  [ 0.6,  1.2)  1020 |**************   |\n"
    "  [ 1.2,  1.8)  1203 |**************** |\n"
    "  [ 1.8,  2.4)  844  |***********      |\n"
    "  [ 2.4,  3.0)  996  |*************    |\n"
    "  [ 3.0,  inf]  0    |                 |\n"
    "                     +-----------------+\n"
    "\n";

const std::string h3_expected_w = //wide
    "\n"
    "                     +-------------------------------------------------------------------------------------------------+\n"
    "  [-inf, -3.0)  0    |                                                                                                 |\n"
    "  [-3.0, -2.4)  819  |***************************************************************                                  |\n"
    "  [-2.4, -1.8)  1181 |******************************************************************************************       |\n"
    "  [-1.8, -1.2)  854  |*****************************************************************                                |\n"
    "  [-1.2, -0.6)  1162 |*****************************************************************************************        |\n"
    "  [-0.6,  0.0)  884  |********************************************************************                             |\n"
    "  [ 0.0,  0.6)  1037 |*******************************************************************************                  |\n"
    "  [ 0.6,  1.2)  1020 |******************************************************************************                   |\n"
    "  [ 1.2,  1.8)  1203 |********************************************************************************************     |\n"
    "  [ 1.8,  2.4)  844  |*****************************************************************                                |\n"
    "  [ 2.4,  3.0)  996  |****************************************************************************                     |\n"
    "  [ 3.0,  inf]  0    |                                                                                                 |\n"
    "                     +-------------------------------------------------------------------------------------------------+\n"
    "\n";


const std::string h4_expected_r = 
    "\n"
    "                 +-------------------------------------------------------------+\n"
    "  [-inf, 0.0)  0 |                                                             |\n"
    "  [ 0.0, 0.5)  2 |**********************************************************   |\n"
    "  [ 0.5, 1.0)  0 |                                                             |\n"
    "  [ 1.0, 1.5)  1 |*****************************                                |\n"
    "  [ 1.5, 2.0)  1 |*****************************                                |\n"
    "  [ 2.0, inf]  1 |*****************************                                |\n"
    "                 +-------------------------------------------------------------+\n"
    "\n";

const std::string h4_expected_n =
    "\n"
    "                 +-------------------------------+\n"
    "  [-inf, 0.0)  0 |                               |\n"
    "  [ 0.0, 0.5)  2 |*****************************  |\n"
    "  [ 0.5, 1.0)  0 |                               |\n"
    "  [ 1.0, 1.5)  1 |***************                |\n"
    "  [ 1.5, 2.0)  1 |***************                |\n"
    "  [ 2.0, inf]  1 |***************                |\n"
    "                 +-------------------------------+\n"
    "\n";

const std::string h4_expected_w =
    "\n"
    "                 +-----------------------------------------------------------------------+\n"
    "  [-inf, 0.0)  0 |                                                                       |\n"
    "  [ 0.0, 0.5)  2 |*******************************************************************    |\n"
    "  [ 0.5, 1.0)  0 |                                                                       |\n"
    "  [ 1.0, 1.5)  1 |**********************************                                     |\n"
    "  [ 1.5, 2.0)  1 |**********************************                                     |\n"
    "  [ 2.0, inf]  1 |**********************************                                     |\n"
    "                 +-----------------------------------------------------------------------+\n"
    "\n";


const std::string h5_expected_r =
    "\n"
    "                 +-------------------------------------------------------------+\n"
    "  [-inf, 0.0)  0 |                                                             |\n"
    "  [ 0.0, 0.5)  0 |                                                             |\n"
    "  [ 0.5, 1.0)  0 |                                                             |\n"
    "  [ 1.0, 1.5)  0 |                                                             |\n"
    "  [ 1.5, 2.0)  0 |                                                             |\n"
    "  [ 2.0, inf]  0 |                                                             |\n"
    "                 +-------------------------------------------------------------+\n"
    "\n";

const std::string h6_expected = 
      "\n"
      "  histogram(\n"
      "    regular(3, -1, 1, options=underflow | overflow),\n"
      "    regular(5, -4, 7, options=underflow | overflow)\n"
      "  )\n";

} // namespace

template <class Histogram>
void run_simple_test(const Histogram& h, const std::string& expected, const unsigned int width = 0)
{
  std::ostringstream os;
  os << std::setw(width) << h;
  BOOST_TEST_EQ(os.str(), expected);
  std::cout << os.str();
}

template <class Histogram>
void test_flags(const Histogram& h, const std::string& expected, const unsigned int width = 0)
{
  std::ostringstream os;
  os << "first" << std::setw(width) << h << "second";
  BOOST_TEST_EQ(os.str(), expected);
  std::cout << os.str();
}

int main() {
  
  // check: std::cout << h1;
  static auto h1 = make_histogram( axis::regular<>(5, -0.5, 2.0) );
  for (auto& value : { 0.5, 0.5, 0.3, -0.2, 1.6, 0.0, 0.1, 0.1, 0.6, 0.4 })
    h1(value);
  run_simple_test(h1, h1_expected_r);


  // check: std::cout << h2;
  const std::vector<double> vec = {-4.9, -4.7, -4.7, -4.6, -4.6, -4.6, -4.6, -4.6, -4.6, -4.4, -4.4, -4.4, -4.4, -4.4, -4.4, -4.3, -4.2, -4.2, -4.2, -4, -4, -4, -4, -3.9, -3.8, -3.8, -3.8, -3.8, -3.7, -3.7, -3.6, -3.6, -3.6, -3.6, -3.3, -3.2, -3.2, -3, -3, -3, -2.9, -2.8, -2.8, -2.8, -2.8, -2.6, -2.6, -2.4, -2.2, -2, -1.9, -1.9, -1.9, -1.9, -1.8, -1.8, -1.7, -1.7, -1.7, -1.7, -1.6, -1.5, -1.4, -1.3, -1.3, -1.2, -1, -1, -1, -0.9, -0.9, -0.9, -0.8, -0.8, -0.8, -0.7, -0.6, -0.6, -0.6, -0.5, -0.3, -0.2, 0, 0, 0.1, 0.2, 0.3, 0.3, 0.3, 0.3, 0.4, 0.5, 0.5, 0.6, 0.7, 0.7, 0.8, 0.8, 0.9, 0.9};

  static auto h2 = make_histogram( axis::regular<>(7, -5.0, 1.0) );
  for (const double& value : vec)
    h2(value);
  run_simple_test(h2, h2_expected_r);


  // check: std::cout << h3;
  const std::vector<double> vec2 = {};
  static auto h3 = make_histogram(axis::regular<>(10, -3.0, 3.0));

  for (const double& value : vec2)
      h3(value);
    run_simple_test(h3, h3_expected_r);
  

  // check: std::cout << h4; 
  // check: std::setw(50) << h4;
  // check: std::setw(90) << h4;
  static auto h4 = make_histogram( axis::regular<>(4, 0.0, 2.0) );
  for (auto& value : { 0.4, 1.1, 0.3, 1.7, 10. })
    h4(value);

  run_simple_test(h4, h4_expected_r);
  run_simple_test(h4, h4_expected_n, 50);
  run_simple_test(h4, h4_expected_w, 90);


  // check: setw() < min_width
  run_simple_test(h3, h3_expected_n, 35);

  // check: setw() > max_width
  run_simple_test(h3, h3_expected_w, 125);

  // check: empty, std::cout << h5;
  static auto h5 = make_histogram( axis::regular<>(4, 0.0, 2.0) );
  run_simple_test(h5, h5_expected_r);

  // check: 2D histogram
  static auto h6 = make_histogram(axis::regular<>(3, -1.0, 1.0), 
                                  axis::regular<>(5, -4.0, 7.0));
                             
  run_simple_test(h6, h6_expected);

  // check: setw flags influence, 1D
  test_flags(h4, "first" + h4_expected_n + "second", 50);

  // check: setw flags influence, 2D
  test_flags(h6, "first" + h6_expected + "second", 50);

  return boost::report_errors();
}
