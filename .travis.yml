# Use, modification, and distribution are
# subject to the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Copyright Antony Polukhin 2014-2019.
# Copyright Hans Dembinski 2019.

#
# See https://svn.boost.org/trac/boost/wiki/TravisCoverals for description of the
# original file and how it can be used with Boost libraries.
#

sudo: false
language: cpp
os: linux

env:
  global:
    - if [ "$TRAVIS_BRANCH" == "master" ]; then
        BRANCH=master;
      else
        BRANCH=develop;
      fi

    - LIBRARY_DIR=$(basename $TRAVIS_BUILD_DIR)

    # Global options for sanitizers
    # detect_leaks=0 is required on container builds by travis :(
    - UBSAN_OPTIONS=print_stacktrace=1
    - LSAN_OPTIONS=verbosity=1:log_threads=1
    - ASAN_OPTIONS=detect_leaks=0:detect_stack_use_after_return=1

matrix:
  include:
    # - os: osx

    - name: "clang"
      env:
        - B2_ARGS='cxxstd=14 toolset=clang cxxflags="-stdlib=libc++" linkflags="-lc++"'
        - B2_ARGS_SERIAL='cxxstd=14 toolset=clang cxxflags="-stdlib=libc++" linkflags="-lc++"'
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: libc++-dev

    - name: "gcc-5: coverage"
      env:
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-5
      script:
        - ./b2 install --prefix=`pwd`/install --with-serialization | grep -v -e common\.copy -e common\.mkdir
        - cd install
        - CXX=g++-5 cmake ../libs/histogram -DCMAKE_BUILD_TYPE=coverage -DBOOST_ROOT=`pwd` -DTEST_SERIALIZATION=ON &&
          make -j2 &&
          ctest -j2;
      after_success:
        - pip install --user cpp-coveralls urllib3[secure];
        - coveralls -r ../libs/histogram -b . --gcov=`which gcov-5`;

    # ubsan+asan disabled in serial tests, because of bug in boost/serialization
    - name: "gcc-8: ubsan, asan"
      env:
        - B2_ARGS='cxxstd=14 toolset=gcc-8 cxxflags="-fsanitize=address,leak,undefined -fno-sanitize-recover=undefined" linkflags="-lasan -lubsan"'
        - B2_ARGS_SERIAL='cxxstd=14 toolset=gcc-8'
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8

before_install:
  # Cloning minimal set of Boost libraries
  - cd ..
  - git clone -b $BRANCH --depth 10 https://github.com/boostorg/boost.git
  - cd boost
  - git submodule update --init --depth 10 tools/build tools/boostdep

  # Replacing Boost module with this project and installing Boost dependencies
  - rm -rf libs/$LIBRARY_DIR || true
  - mv $TRAVIS_BUILD_DIR libs/$LIBRARY_DIR
  - python tools/boostdep/depinst/depinst.py --git_args "--depth 10 --jobs 2" $LIBRARY_DIR

  # Adding missing toolsets and preparing Boost headers
  - ./bootstrap.sh
  - ./b2 headers

script:
  - sh -c "./b2 -j2 -q $B2_ARGS libs/histogram/test libs/histogram/examples"
  - if [ -n $B2_ARSG_SERIAL ]; then
      sh -c "./b2 -j2 -q $B2_ARGS_SERIAL libs/histogram/test//serial libs/histogram/examples//serial";
    fi
