# Use, modification, and distribution are
# subject to the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Copyright Antony Polukhin 2014-2019.
# Copyright Hans Dembinski 2019.

#
# See https://svn.boost.org/trac/boost/wiki/TravisCoverals for description of the
# original file and how it can be used with Boost libraries.
#

sudo: false
language: cpp
os: linux

env:
  global:
    - if [ "$TRAVIS_BRANCH" == "master" ]; then
        BRANCH=master;
      else
        BRANCH=develop;
      fi

    - LIBRARY_DIR=$(basename $TRAVIS_BUILD_DIR)

    # Global options for sanitizers
    # detect_leaks=0 is required on container builds by travis :(
    - UBSAN_OPTIONS=print_stacktrace=1
    - LSAN_OPTIONS=verbosity=1:log_threads=1
    - ASAN_OPTIONS=detect_leaks=0:detect_stack_use_after_return=1

matrix:
  include:
    # - os: osx

    - name: "clang"
      env: B2_ARGS='cxxstd=14,1z toolset=clang cxxflags="-stdlib=libc++ -fsanitize=address,leak,undefined -fno-sanitize-recover=undefined" linkflags="-lc++ -lasan -lubsan"'
      addons:
        apt:
          sources: llvm-toolchain-trusty-5.0
          packages: clang-5.0 libc++-dev

    - name: "gcc-8: coverage"
      env: B2_ARGS='toolset=gcc-8 cxxflags="--coverage -fsanitize=address,leak,undefined -fno-sanitize-recover=undefined" linkflags="--coverage -lasan -lubsan"'
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8
      after_success:
        # Copying Coveralls data to a separate folder
        - mkdir -p $TRAVIS_BUILD_DIR/coveralls
        - find bin.v2/ -name "*.gcda" -exec cp "{}" $TRAVIS_BUILD_DIR/coveralls/ \;
        - find bin.v2/ -name "*.gcno" -exec cp "{}" $TRAVIS_BUILD_DIR/coveralls/ \;
        - find bin.v2/ -name "*.da" -exec cp "{}" $TRAVIS_BUILD_DIR/coveralls/ \;
        - find bin.v2/ -name "*.no" -exec cp "{}" $TRAVIS_BUILD_DIR/coveralls/ \;
        - wget https://github.com/linux-test-project/lcov/archive/v1.12.zip
        - unzip v1.12.zip
        - LCOV="`pwd`/lcov-1.12/bin/lcov --gcov-tool gcov-8"

        # Preparing Coveralls data by changind data format to a readable one
        - $LCOV --directory $TRAVIS_BUILD_DIR/coveralls --base-directory `pwd` --capture --output-file $TRAVIS_BUILD_DIR/coveralls/coverage.info

        # ... erasing /test/ /example/ folder data
        - $LCOV --remove $TRAVIS_BUILD_DIR/coveralls/coverage.info "/usr*" "*/$LIBRARY_DIR/test*/*" "*/$LIBRARY_DIR/example*/*" -o $TRAVIS_BUILD_DIR/coveralls/coverage.info

        # ... erasing data that is not related to this project directly
        - OTHER_LIBS=`grep "submodule .*" .gitmodules | sed 's/\[submodule\ "\(.*\)"\]/"\*\/boost\/\1\.hpp" "\*\/boost\/\1\/\*"/g'| sed "/\"\*\/boost\/$LIBRARY_DIR\/\*\"/d" | sed ':a;N;$!ba;s/\n/ /g'`
        - echo $OTHER_LIBS
        - eval "$LCOV --remove $TRAVIS_BUILD_DIR/coveralls/coverage.info $OTHER_LIBS -o $TRAVIS_BUILD_DIR/coveralls/coverage.info"

        # Sending data to Coveralls
        - cd $TRAVIS_BUILD_DIR
        - gem install coveralls-lcov
        - coveralls-lcov coveralls/coverage.info

before_install:
  # Cloning minimal set of Boost libraries
  - cd ..
  - git clone -b $BRANCH --depth 10 https://github.com/boostorg/boost.git
  - cd boost
  - git submodule update --init --depth 10 tools/build tools/boostdep

  # Replacing Boost module with this project and installing Boost dependencies
  - rm -rf libs/$LIBRARY_DIR || true
  - mv $TRAVIS_BUILD_DIR libs/$LIBRARY_DIR
  - python tools/boostdep/depinst/depinst.py --git_args "--depth 10 --jobs 2" $LIBRARY_DIR

  # Adding missing toolsets and preparing Boost headers
  - ./bootstrap.sh
  - ./b2 headers

script:
  - sh -c "./b2 -j2 $B2_ARGS libs/histogram/test libs/histogram/examples"
