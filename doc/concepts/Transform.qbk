[section:Transform Transform]

A [*Transform] implements a monotonic mapping between two real-valued domains, external and internal. It is used to extend the [classref boost::histogram::axis::regular regular axis]. The bins in the internal domain are of equal width, while the bins in the external domain are non-equal width. Must be [@https://en.cppreference.com/w/cpp/named_req/DefaultConstructible DefaultConstructible], [@https://en.cppreference.com/w/cpp/named_req/CopyConstructible CopyConstructible] and [@https://en.cppreference.com/w/cpp/named_req/CopyAssignable CopyAssignable].

[heading Required features]

* `T` is a type meeting the requirements of [*Transform]
* `t,u` is a value of type `T`
* `X` is a type with the semantics of a floating-point type
* `x` is a value of type `X`
* `Y` is a floating-point type
* `y` is a value of type `Y`

[table Valid expressions
[[Expression] [Return type] [Semantics, Pre/Post-conditions]]
[
  [`t.forward(x)`]
  [`Y`]
  [
    Const or static member function which maps the external value to the corresponding internal value. The return type `Y` may differ from `X`.
  ]
]
[
  [`t.inverse(y)`]
  [`X`]
  [
    Const or static member function which maps the internal value to the corresponding external value. The result of `t.inverse(t.forward(x))` must be equal to `x` within floating-point precision.
  ]
]
[
  [`t == u`]
  [`bool`]
  [
    Compares two instances of `T` types and returns `true` if they have the same state. Can be omitted if `T` is stateless.
  ]
]
[
  [`ar & t`]
  []
  [
    Serializes `a` to the archive or loads serialized state from the archive. Can be omitted if `T` is stateless.
  ]
]
]

[heading Models]

* [classref boost::histogram::axis::transform::id]
* [classref boost::histogram::axis::transform::log]
* [classref boost::histogram::axis::transform::sqrt]
* [classref boost::histogram::axis::transform::pow]

[endsect]
